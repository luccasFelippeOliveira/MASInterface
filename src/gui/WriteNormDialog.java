/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import analisador.sintatico.SyntacticErrorException;
import analisador.sintatico.UnexpectedEndOfInputException;
import com.norm.checker.norm.definition.Norm;
import java.util.List;
import compilation.Compiler;
import java.util.ArrayList;
import model.Services;

/**
 *
 * @author luccas
 */
public class WriteNormDialog extends javax.swing.JDialog {

    /**
     * Creates new form WriteNormDialog
     */
    public WriteNormDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        normTextArea = new javax.swing.JTextArea();
        normLabel = new javax.swing.JLabel();
        compileButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        normTextArea.setColumns(20);
        normTextArea.setRows(5);
        jScrollPane1.setViewportView(normTextArea);

        normLabel.setText("Norm:");

        compileButton.setText("Compile");
        compileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(normLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(compileButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(normLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compileButton)
                    .addComponent(cancelButton))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void compileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileButtonActionPerformed
        /*Compile Norms*/
        compileNorms();
        this.setVisible(false);
        
    }//GEN-LAST:event_compileButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        /*Exit*/
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void compileNorms() {
        String text = normTextArea.getText();
        String[] normInput = text.split("\n");
        
        List<Norm> compiledNorms = new ArrayList<Norm>();
        
        for(String normString : normInput) {
            Compiler compiler = new Compiler();
            Norm generatedNorm;
            try {
                generatedNorm = compiler.compileNorm(normString);
                compiledNorms.add(generatedNorm);
            }
            catch(SyntacticErrorException se) {
                /*TODO: Warn user the error location*/
                se.printStackTrace();
            }
            catch(UnexpectedEndOfInputException ue) {
                /*TODO: Warn user the error location*/
                ue.printStackTrace();
            }
        }
        saveNorms(compiledNorms);
    }
    
    private void saveNorms(List<Norm> normList) {
        Services.getNormModelList().addAll(normList);
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton compileButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel normLabel;
    private javax.swing.JTextArea normTextArea;
    // End of variables declaration//GEN-END:variables
}
