/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

/**
 *
 * @author luccas
 */
public class MainEx extends javax.swing.JFrame {

    private RegisterActionsForm registerActionsForm = null;
    private RegisterObjectForm registerObjectForm = null;
    private AttributeValueForm attributeValueForm = null;
    private BNFNormsForm bnfNormsForm = null;
    /**
     * Creates new form MainEx
     */
    public MainEx() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainMenuBar = new javax.swing.JMenuBar();
        initMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        registerActionsSubMenu = new javax.swing.JMenuItem();
        registerObjectsSubMenu = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        regtisterAttrAndValSubMenu = new javax.swing.JMenu();
        conflictsBNFSubMenu = new javax.swing.JMenuItem();
        conflictsOntologySubMenu = new javax.swing.JMenuItem();
        exampleConflictsSubMenu = new javax.swing.JMenuItem();
        conflictsRandomlySubMenu = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();
        descriptionNormConflictsSubMenu = new javax.swing.JMenuItem();
        developersSubMenu = new javax.swing.JMenuItem();
        techUsedSubMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome to MAS Interface");

        initMenu.setText("Init");

        jMenuItem1.setText("CRUD of Norms");
        initMenu.add(jMenuItem1);

        registerActionsSubMenu.setText("Register Actions");
        registerActionsSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionsSubMenuActionPerformed(evt);
            }
        });
        initMenu.add(registerActionsSubMenu);

        registerObjectsSubMenu.setText("Register Objects");
        registerObjectsSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerObjectsSubMenuActionPerformed(evt);
            }
        });
        initMenu.add(registerObjectsSubMenu);

        jMenuItem2.setText("Register Attributes and Values");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        initMenu.add(jMenuItem2);

        mainMenuBar.add(initMenu);

        regtisterAttrAndValSubMenu.setText("Operations");

        conflictsBNFSubMenu.setText("Conflicts Usnig BNF");
        conflictsBNFSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conflictsBNFSubMenuActionPerformed(evt);
            }
        });
        regtisterAttrAndValSubMenu.add(conflictsBNFSubMenu);

        conflictsOntologySubMenu.setText("Conflicts Using Ontology");
        regtisterAttrAndValSubMenu.add(conflictsOntologySubMenu);

        exampleConflictsSubMenu.setText("Example of Conflicts");
        regtisterAttrAndValSubMenu.add(exampleConflictsSubMenu);

        conflictsRandomlySubMenu.setText("Conflicts Ramdomly");
        regtisterAttrAndValSubMenu.add(conflictsRandomlySubMenu);

        mainMenuBar.add(regtisterAttrAndValSubMenu);

        aboutMenu.setText("About");

        descriptionNormConflictsSubMenu.setText("Description of Normative Conflicts");
        aboutMenu.add(descriptionNormConflictsSubMenu);

        developersSubMenu.setText("Developers");
        aboutMenu.add(developersSubMenu);

        techUsedSubMenu.setText("Technologies Used");
        aboutMenu.add(techUsedSubMenu);

        mainMenuBar.add(aboutMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerActionsSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionsSubMenuActionPerformed
        // Create RegisterActionsForm
        if(registerActionsForm == null) {
            registerActionsForm = new RegisterActionsForm();
        }
        registerActionsForm.setVisible(true);
    }//GEN-LAST:event_registerActionsSubMenuActionPerformed

    private void registerObjectsSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerObjectsSubMenuActionPerformed
        // Cretate RegisterObjectForm
        if(registerObjectForm == null) {
            registerObjectForm = new RegisterObjectForm();
        }
        registerObjectForm.setVisible(true);
    }//GEN-LAST:event_registerObjectsSubMenuActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Create AttributeValueForm
        if(attributeValueForm == null) {
            attributeValueForm = new AttributeValueForm();
        }
        attributeValueForm.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void conflictsBNFSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conflictsBNFSubMenuActionPerformed
        // Create BNF form
        if(bnfNormsForm == null) {
            bnfNormsForm = new BNFNormsForm();
        }
        bnfNormsForm.setVisible(true);
    }//GEN-LAST:event_conflictsBNFSubMenuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JMenuItem conflictsBNFSubMenu;
    private javax.swing.JMenuItem conflictsOntologySubMenu;
    private javax.swing.JMenuItem conflictsRandomlySubMenu;
    private javax.swing.JMenuItem descriptionNormConflictsSubMenu;
    private javax.swing.JMenuItem developersSubMenu;
    private javax.swing.JMenuItem exampleConflictsSubMenu;
    private javax.swing.JMenu initMenu;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JMenuItem registerActionsSubMenu;
    private javax.swing.JMenuItem registerObjectsSubMenu;
    private javax.swing.JMenu regtisterAttrAndValSubMenu;
    private javax.swing.JMenuItem techUsedSubMenu;
    // End of variables declaration//GEN-END:variables
}
