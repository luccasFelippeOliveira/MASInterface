/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import initialization.Init;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import model.Services;

/**
 *
 * @author luccas
 */
public class MainEx extends javax.swing.JFrame {

    private RegisterActionsForm registerActionsForm = null;
    private RegisterObjectForm registerObjectForm = null;
    private AttributeValueForm attributeValueForm = null;
    private BNFNormsForm bnfNormsForm = null;
    private CRUDNormsForm crudNormsForm = null;
    private ExampleConflictForm exampleConflictForm = null;
    private DescriptionForm descriptionForm = null;
    private DevelopersForm developersForm = null;
    private TechnologiesForm technologiesForm = null;

    /**
     * Creates new form MainEx
     */
    public MainEx() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        new Init();
        System.out.println("Action size" + Services.getActionModelList().size());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainDesktopPane = new javax.swing.JDesktopPane() {
            Image sized = getSizedImage();
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(sizedImage, 0 ,0, this);
            }
        };
        mainMenuBar = new javax.swing.JMenuBar();
        initMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        registerActionsSubMenu = new javax.swing.JMenuItem();
        registerObjectsSubMenu = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        regtisterAttrAndValSubMenu = new javax.swing.JMenu();
        conflictsBNFSubMenu = new javax.swing.JMenuItem();
        conflictsOntologySubMenu = new javax.swing.JMenuItem();
        exampleConflictsSubMenu = new javax.swing.JMenuItem();
        conflictsRandomlySubMenu = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();
        descriptionNormConflictsSubMenu = new javax.swing.JMenuItem();
        developersSubMenu = new javax.swing.JMenuItem();
        techUsedSubMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome to MAS Interface");

        mainDesktopPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                mainDesktopPaneComponentResized(evt);
            }
        });

        javax.swing.GroupLayout mainDesktopPaneLayout = new javax.swing.GroupLayout(mainDesktopPane);
        mainDesktopPane.setLayout(mainDesktopPaneLayout);
        mainDesktopPaneLayout.setHorizontalGroup(
            mainDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        mainDesktopPaneLayout.setVerticalGroup(
            mainDesktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        initMenu.setText("Init");

        jMenuItem1.setText("CRUD of Norms");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        initMenu.add(jMenuItem1);

        registerActionsSubMenu.setText("Register Actions");
        registerActionsSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionsSubMenuActionPerformed(evt);
            }
        });
        initMenu.add(registerActionsSubMenu);

        registerObjectsSubMenu.setText("Register Objects");
        registerObjectsSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerObjectsSubMenuActionPerformed(evt);
            }
        });
        initMenu.add(registerObjectsSubMenu);

        jMenuItem2.setText("Register Attributes and Values");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        initMenu.add(jMenuItem2);

        mainMenuBar.add(initMenu);

        regtisterAttrAndValSubMenu.setText("Operations");

        conflictsBNFSubMenu.setText("Conflicts Usnig BNF");
        conflictsBNFSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conflictsBNFSubMenuActionPerformed(evt);
            }
        });
        regtisterAttrAndValSubMenu.add(conflictsBNFSubMenu);

        conflictsOntologySubMenu.setText("Conflicts Using Ontology");
        regtisterAttrAndValSubMenu.add(conflictsOntologySubMenu);

        exampleConflictsSubMenu.setText("Example of Conflicts");
        exampleConflictsSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exampleConflictsSubMenuActionPerformed(evt);
            }
        });
        regtisterAttrAndValSubMenu.add(exampleConflictsSubMenu);

        conflictsRandomlySubMenu.setText("Conflicts Ramdomly");
        regtisterAttrAndValSubMenu.add(conflictsRandomlySubMenu);

        mainMenuBar.add(regtisterAttrAndValSubMenu);

        aboutMenu.setText("About");

        descriptionNormConflictsSubMenu.setText("Description of Normative Conflicts");
        descriptionNormConflictsSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionNormConflictsSubMenuActionPerformed(evt);
            }
        });
        aboutMenu.add(descriptionNormConflictsSubMenu);

        developersSubMenu.setText("Developers");
        developersSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                developersSubMenuActionPerformed(evt);
            }
        });
        aboutMenu.add(developersSubMenu);

        techUsedSubMenu.setText("Technologies Used");
        techUsedSubMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                techUsedSubMenuActionPerformed(evt);
            }
        });
        aboutMenu.add(techUsedSubMenu);

        mainMenuBar.add(aboutMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainDesktopPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainDesktopPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerActionsSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionsSubMenuActionPerformed
        // Create RegisterActionsForm
        if (registerActionsForm == null) {
            registerActionsForm = new RegisterActionsForm();
        }
        centerFrame(registerActionsForm);
    }//GEN-LAST:event_registerActionsSubMenuActionPerformed

    private void registerObjectsSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerObjectsSubMenuActionPerformed
        // Cretate RegisterObjectForm
        if (registerObjectForm == null) {
            registerObjectForm = new RegisterObjectForm();
        }
        centerFrame(registerObjectForm);
    }//GEN-LAST:event_registerObjectsSubMenuActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Create AttributeValueForm
        if (attributeValueForm == null) {
            attributeValueForm = new AttributeValueForm();
        }
        centerFrame(attributeValueForm);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void conflictsBNFSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conflictsBNFSubMenuActionPerformed
        // Create BNF form
        if (bnfNormsForm == null) {
            bnfNormsForm = new BNFNormsForm();
        }
        centerFrame(bnfNormsForm);
    }//GEN-LAST:event_conflictsBNFSubMenuActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Create CRUD norms form
        if (crudNormsForm == null) {
            crudNormsForm = new CRUDNormsForm();
        }
        centerFrame(crudNormsForm);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void mainDesktopPaneComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_mainDesktopPaneComponentResized
        windowHeight = evt.getComponent().getSize().height;
        windowWidth = evt.getComponent().getSize().width;

        this.sizedImage = image.getScaledInstance(windowWidth, windowHeight, Image.SCALE_DEFAULT);
        mainDesktopPane.repaint();
    }//GEN-LAST:event_mainDesktopPaneComponentResized

    private void exampleConflictsSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exampleConflictsSubMenuActionPerformed
        if(exampleConflictForm == null) {
            exampleConflictForm = new ExampleConflictForm();
        }
        centerFrame(exampleConflictForm);
    }//GEN-LAST:event_exampleConflictsSubMenuActionPerformed

    private void descriptionNormConflictsSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionNormConflictsSubMenuActionPerformed
        if(descriptionForm == null) {
            descriptionForm = new DescriptionForm();
        }
        centerFrame(descriptionForm);
    }//GEN-LAST:event_descriptionNormConflictsSubMenuActionPerformed

    private void developersSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_developersSubMenuActionPerformed
        if(developersForm == null) {
            developersForm = new DevelopersForm();
        }
        centerFrame(developersForm);
    }//GEN-LAST:event_developersSubMenuActionPerformed

    private void techUsedSubMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_techUsedSubMenuActionPerformed
        if(technologiesForm == null) {
            technologiesForm = new TechnologiesForm();
        }
        centerFrame(technologiesForm);
    }//GEN-LAST:event_techUsedSubMenuActionPerformed

    private Image getSizedImage() {
        return this.sizedImage;
    }

    private void centerFrame(JFrame frame) {
        Dimension frameSize = frame.getSize();
        
        frame.setLocation((windowWidth - frameSize.width)/2, (windowHeight - frameSize.height) / 2);
        
        frame.setVisible(true);

    }

    private ImageIcon icon = new ImageIcon("/home/luccas/Pictures/IntroNorms.png");

    private Image image = icon.getImage();

    private Image sizedImage = image.getScaledInstance(1000, 800, Image.SCALE_SMOOTH);

    private int windowHeight;
    private int windowWidth;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JMenuItem conflictsBNFSubMenu;
    private javax.swing.JMenuItem conflictsOntologySubMenu;
    private javax.swing.JMenuItem conflictsRandomlySubMenu;
    private javax.swing.JMenuItem descriptionNormConflictsSubMenu;
    private javax.swing.JMenuItem developersSubMenu;
    private javax.swing.JMenuItem exampleConflictsSubMenu;
    private javax.swing.JMenu initMenu;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JDesktopPane mainDesktopPane;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JMenuItem registerActionsSubMenu;
    private javax.swing.JMenuItem registerObjectsSubMenu;
    private javax.swing.JMenu regtisterAttrAndValSubMenu;
    private javax.swing.JMenuItem techUsedSubMenu;
    // End of variables declaration//GEN-END:variables
}
