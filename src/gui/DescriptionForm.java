/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

/**
 *
 * @author luccas
 */
public class DescriptionForm extends javax.swing.JFrame {

    /**
     * Creates new form DescriptionForm
     */
    public DescriptionForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("A norm n ∈ Nrm is a tuple of the form:\n\n\t(deoC, c, e, a, ac, dc)\n\nwhere deoC is a deontic concept from the set {O, F, P}, respectively, obliged, forbidden and permitted; c ∈ C is the context where the norm is defined; e ∈ E is the entity whose action is being regulated; a ∈ A is the action being regulated; ac ∈ Cd indicates the condition that activates the norm and dc ∈ Cd is the condition that deactivates the norm.\n\nEvery norm is defined in the scope of a context. The entity, whose action is being regulated, must fulfill the norm when executing in the context where the norm is being defined. In this paper, we consider that a norm can be defined in the context of an organization o ∈ O or of an environment env ∈ Env. The set of possible contexts are defined as C = O ∪ Env. A norm regulates the action of an agent a ∈ Ag, an organization (or group of agents) o ∈ O or a role r ∈ R. Agents, organizations and roles are entities of the set E = Ag ∪ R ∪ O.\n\nThe activation and deactivation conditions, ac ∈ Cd and dc ∈ Cd, can state an event that can be a date, the execution of an action, the fulfillment of a norm, etc. In this paper, we will focus on the specification of dates since it is easier to figure out which event has occurred first. Thus, we use simple mathematic symbols such as ≤ and ≥ to indicate that an event occurs before or after another (∀n ∈ N, ac ≤ dc).\n\nAn action is defined by the name of the action and, optionally, its attributes and their values, an object where the action will be executed and a list of attributes (with their values). Thus, in this paper we define four different ways to represent the action:\n\n  (i) action;  \n\n  (ii) action object;\n\n  (iii) action (attribute1 = {value1}, attribute2 = {value2}, ...});\n\n  (iv) action object (attribute1 = {value1}, attribute2 = {value2},...}).\n\nThe designer of a multi-agent system can set any of the types of norms to represent your domain, these different ways of defining a norm represents a great flexibility in creating a multi-agent system. In order to exemplify these four ways to describe an action, let's consider the following four prohibition norms:\n\n  (i) Na forbids agent A to study;\n\n  (ii) Nb forbids agent A to study math;\n\n  (iii) Nc forbids agent A to study on Monday;\n\n  (iv) Nd forbids agent A to study Math on Monday.\n\nThe actions described in the norms are represented as:\n\n  (i) Na: study;\n\n  (ii) Nb: study math;\n\n  (iii) Nc: study (day={Monday});\n\n  (iv) Nd: study math (day={Monday}).");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DescriptionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DescriptionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DescriptionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DescriptionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DescriptionForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
